rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    match /events/{eventId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
                   request.resource.data.createdBy == request.auth.uid;
      allow update, delete: if isAuthenticated() && 
                           resource.data.createdBy == request.auth.uid;
    }

    match /feedback/{feedbackId} {
      // Allow anyone to create feedback, with simple validation
      allow create: if request.resource.data.email is string &&
                   request.resource.data.email.matches('^[^@]+@[^@]+\\.[^@]+$') &&
                   request.resource.data.subject is string &&
                   request.resource.data.message is string &&
                   request.resource.data.keys().hasAll(['email', 'subject', 'message']) &&
                   request.resource.data.keys().hasOnly(['email', 'subject', 'message', 'userId']);
      // Only authenticated users can read feedback
      allow read: if isAuthenticated();
      // Only admins can update/delete
      allow update, delete: if isAuthenticated() && 
                           get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /recipes/{recipeId} {
      allow read: if resource.data.status == 'published' && 
                 (resource.data.privacy == 'public' || 
                  isAuthenticated() && resource.data.creatorId == request.auth.uid);
      allow create: if isAuthenticated() && 
                   request.resource.data.creatorId == request.auth.uid;
      allow update: if isAuthenticated() && 
                   resource.data.creatorId == request.auth.uid;
      allow delete: if isAuthenticated() && 
                   resource.data.creatorId == request.auth.uid;
    }
    
    match /users/{userId} {
      allow read: if isAuthenticated() &&
                 (request.auth.uid == userId || 
                  get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin');
      allow update: if isAuthenticated() && 
                   request.auth.uid == userId;
    }
  }
}