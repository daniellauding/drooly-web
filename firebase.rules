rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /recipes/{recipeId} {
      // Allow reading public recipes even if not verified
      allow read: if resource.data.status == 'published';
      
      // Only allow writing if authenticated and verified
      allow write: if request.auth != null && 
                  request.auth.token.email_verified;
    }
    
    match /users/{userId} {
      // Allow reading own user data even if not verified
      allow read: if request.auth != null &&
                 (request.auth.uid == userId || 
                  get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin');
                  
      // Allow updating if user is owner or superadmin
      allow update: if request.auth != null && 
                   (request.auth.uid == userId ||
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin');

      // Allow superadmin to update verification status
      allow update: if request.auth != null &&
                   get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin' &&
                   request.resource.data.diff(resource.data).affectedKeys().hasOnly(['manuallyVerified', 'verifiedAt']);
    }

    match /invites/{inviteId} {
      // Allow reading invites if authenticated
      allow read: if request.auth != null;
      
      // Allow creating invites if authenticated and verified through any method
      allow create: if request.auth != null && 
                   (
                     request.auth.token.email_verified == true || 
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.manuallyVerified == true ||
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin'
                   );
      
      // Allow updating own invites
      allow update: if request.auth != null && 
                   resource.data.createdBy == request.auth.uid;
      
      // Allow deleting own invites
      allow delete: if request.auth != null && 
                   resource.data.createdBy == request.auth.uid;
    }

    match /mail/{mailId} {
      // Allow creating mail documents if authenticated
      allow create: if request.auth != null;
      
      // Only allow reading own mail documents
      allow read: if request.auth != null && 
                 resource.data.to == request.auth.token.email;
    }

  }
}
