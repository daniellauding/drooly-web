rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isVerified() {
      return request.auth.token.email_verified == true || 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.manuallyVerified == true ||
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    match /events/{eventId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
                           resource.data.createdBy == request.auth.uid;
    }

    match /recipes/{recipeId} {
      allow read: if resource.data.status == 'published' && 
                 (resource.data.privacy == 'public' || 
                  request.auth != null && resource.data.creatorId == request.auth.uid);
      allow create: if request.auth != null && 
                   request.resource.data.creatorId == request.auth.uid;
      allow update: if request.auth != null && 
                   resource.data.creatorId == request.auth.uid;
      allow delete: if request.auth != null && 
                   resource.data.creatorId == request.auth.uid;
    }
    
    match /users/{userId} {
      allow read: if request.auth != null &&
                 (request.auth.uid == userId || 
                  get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin');
      allow update: if request.auth != null && 
                   (request.auth.uid == userId ||
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin');
    }

    match /invites/{inviteId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
                           resource.data.createdBy == request.auth.uid;
    }

    match /feedback/{feedbackId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
                           resource.data.createdBy == request.auth.uid;
    }

    match /mail/{mailId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
                 (resource.data.to == request.auth.token.email ||
                  get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin');
    }

    match /users/{userId}/achievements/{achievementId} {
      allow read, write: if request.auth != null && 
                        (request.auth.uid == userId || 
                         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin');
    }

    match /eventInvites/{inviteId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
                   resource.data.email == request.auth.token.email;
    }
  }
}
